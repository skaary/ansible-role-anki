---
- name: ensure required libraries for recent ubuntu installations are present
  apt:
    name: "{{ required_packages }}"
    state: present
  become: true

- name: fetch latest anki release version
  uri:
    url: "{{ anki_repo_api }}"
    body_format: json
    return_content: true
  register: anki_json

- name: check if anki directory already exists
  stat:
    path: "{{ anki_dir }}"
  register: old_anki

- name: ensure old anki directory is removed
  file:
    path: "{{ anki_dir }}"
    state: absent
  when: old_anki.stat.exists
  become: true

- name: ensure anki directory exists
  file:
    path: "{{ anki_dir }}"
    state: directory
    owner: "{{ ansible_user_id }}"
    group: "{{ ansible_user_id }}"
  become: true

- name: download and extract anki tar file
  unarchive:
    src: "{{ anki_download_url }}"
    dest: "{{ anki_dir }}"
    remote_src: true
    extra_opts: [--strip-components=1]
  register: archive_dir
  become: true

- name: execute anki install script
  command: ./install.sh
  args:
    chdir: "{{ anki_dir }}"
  become: true
